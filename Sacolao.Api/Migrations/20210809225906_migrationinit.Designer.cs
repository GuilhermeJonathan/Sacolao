// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sacolao.Api.Data;

namespace Sacolao.Api.Migrations
{
    [DbContext(typeof(SacolaoContext))]
    [Migration("20210809225906_migrationinit")]
    partial class migrationinit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("CompraFruta", b =>
                {
                    b.Property<int>("ComprasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FrutasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ComprasId", "FrutasId");

                    b.HasIndex("FrutasId");

                    b.ToTable("CompraFruta");
                });

            modelBuilder.Entity("Sacolao.Api.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Sacolao.Api.Models.Fruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Foto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Frutas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Amarela",
                            Foto = "banana.jpg",
                            Nome = "Banana",
                            QuantidadeEstoque = 50,
                            Valor = 5m
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Vermelha",
                            Foto = "maca.jpg",
                            Nome = "Maça",
                            QuantidadeEstoque = 150,
                            Valor = 2m
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Verde",
                            Foto = "melancia.jpg",
                            Nome = "Melancia",
                            QuantidadeEstoque = 15,
                            Valor = 9m
                        });
                });

            modelBuilder.Entity("Sacolao.Api.Models.FrutaCompra", b =>
                {
                    b.Property<int>("FrutaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompraId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FrutaId", "CompraId");

                    b.HasIndex("CompraId");

                    b.ToTable("FrutasCompras");
                });

            modelBuilder.Entity("CompraFruta", b =>
                {
                    b.HasOne("Sacolao.Api.Models.Compra", null)
                        .WithMany()
                        .HasForeignKey("ComprasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sacolao.Api.Models.Fruta", null)
                        .WithMany()
                        .HasForeignKey("FrutasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sacolao.Api.Models.FrutaCompra", b =>
                {
                    b.HasOne("Sacolao.Api.Models.Compra", "Compra")
                        .WithMany()
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sacolao.Api.Models.Fruta", "Fruta")
                        .WithMany()
                        .HasForeignKey("FrutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Fruta");
                });
#pragma warning restore 612, 618
        }
    }
}
